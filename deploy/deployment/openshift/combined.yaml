apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: devworkspace-che-operator
    app.kubernetes.io/part-of: devworkspace-che-operator
  name: chemanagers.che.eclipse.org
spec:
  group: che.eclipse.org
  names:
    kind: CheManager
    listKind: CheManagerList
    plural: chemanagers
    singular: chemanager
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CheManager is the configuration of the CheManager layer of Devworkspace.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CheManagerSpec holds the configuration of the Che controller.
            properties:
              gatewayConfigurerImage:
                description: GatewayConfigurerImage is the docker image to use for
                  the sidecar of the Che gateway that is used to configure it. This
                  is only used when GatewayDisabled is false. If not defined in the
                  CR, it is taken from the `RELATED_IMAGE_gateway_configurer` environment
                  variable of the che operator deployment/pod. If not defined there,
                  it defaults to a hardcoded value.
                type: string
              gatewayDisabled:
                description: "GatewayDisabled enables or disables routing of the url
                  rewrite supporting devworkspace endpoints through a common gateway
                  (the hostname of which is defined by the GatewayHost). \n Default
                  value is \"false\" meaning that the gateway is enabled. \n If set
                  to false (i.e. the gateway is enabled), endpoints marked using the
                  \"urlRewriteSupported\" attribute are exposed on unique subpaths
                  of the GatewayHost, while the rest of the devworkspace endpoints
                  are exposed on subdomains of the RoutingSuffix specified by the
                  DevWorkspaceRouting of the devworkspace. \n If set to true (i.e.
                  the gateway is disabled), all endpoints are deployed on subdomains
                  of the RoutingSuffix."
                type: boolean
              gatewayHost:
                description: "GatewayHost is the full host name used to expose devworkspace
                  endpoints that support url rewriting reverse proxy. See the GatewayDisabled
                  attribute for a more detailed description of where and how are devworkspace
                  endpoints exposed in various configurations. \n This attribute is
                  mandatory on Kubernetes, optional on OpenShift."
                type: string
              gatewayImage:
                description: GatewayImage is the docker image to use for the Che gateway.  This
                  is only used if GatewayDisabled is false. If not defined in the
                  CR, it is taken from the `RELATED_IMAGE_gateway` environment variable
                  of the che operator deployment/pod. If not defined there, it defaults
                  to a hardcoded value.
                type: string
              k8s:
                description: K8s contains the configuration specific only to Kubernetes
                properties:
                  ingressAnnotations:
                    additionalProperties:
                      type: string
                    description: "IngressAnnotations are the annotations to be put
                      on the generated ingresses. This can be used to configure the
                      ingress class and the ingress-controller-specific behavior for
                      both the gateway and the ingresses created to expose the Devworkspace
                      component endpoints. When not specified, this defaults to: \n
                      \    kubernetes.io/ingress.class:                       \"nginx\"
                      \    nginx.ingress.kubernetes.io/proxy-read-timeout:    \"3600\",
                      \    nginx.ingress.kubernetes.io/proxy-connect-timeout: \"3600\",
                      \    nginx.ingress.kubernetes.io/ssl-redirect:          \"true\""
                    type: object
                type: object
              tlsSecretName:
                description: "Name of a secret that will be used to setup ingress/route
                  TLS certificate. When the field is empty string, the default cluster
                  certificate will be used. The same secret is assumed to exist in
                  the same namespace as the CheManager CR and is used for both the
                  gateway and all devworkspace endpoints. In case of the devworkspace
                  endpoints, the secret is copied to the namespace of the devworkspace.
                  \n The secret has to be of type \"tls\"."
                type: string
            type: object
          status:
            properties:
              gatewayHost:
                description: GatewayHost is the resolved host of the ingress/route,
                  on which the gateway is accessible.
                type: string
              gatewayPhase:
                description: GatewayPhase specifies the phase in which the singlehost
                  gateway deployment currently is. If the manager routing is not singlehost,
                  this is "Inactive"
                type: string
              message:
                description: Message contains further human-readable info for why
                  the manager is in the phase it currently is.
                type: string
              phase:
                description: Phase is the phase in which the manager as a whole finds
                  itself in.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: devworkspace-che-operator
    app.kubernetes.io/part-of: devworkspace-che-operator
  name: devworkspace-che-serviceaccount
  namespace: devworkspace-che
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: devworkspace-che-operator
    app.kubernetes.io/part-of: devworkspace-che-operator
  name: devworkspace-che-leader-election-role
  namespace: devworkspace-che
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: devworkspace-che-operator
    app.kubernetes.io/part-of: devworkspace-che-operator
  name: devworkspace-che-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: devworkspace-che-operator
    app.kubernetes.io/part-of: devworkspace-che-operator
  name: devworkspace-che-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - persistentvolumeclaims
  - pods
  - secrets
  - serviceaccounts
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - '*'
- apiGroups:
  - apps
  resourceNames:
  - devworkspace-che-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - apps
  - extensions
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  - extensions
  resources:
  - deployments
  - replicasets
  verbs:
  - '*'
- apiGroups:
  - apps
  - extensions
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - update
  - watch
- apiGroups:
  - che.eclipse.org
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - che.eclipse.org
  resources:
  - chemanagers
  verbs:
  - '*'
- apiGroups:
  - che.eclipse.org
  resources:
  - chemanagers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - che.eclipse.org
  resources:
  - chemanagers/finalizers
  verbs:
  - update
- apiGroups:
  - controller.devfile.io
  resources:
  - devworkspaceroutings
  verbs:
  - '*'
- apiGroups:
  - controller.devfile.io
  resources:
  - devworkspaceroutings/finalizers
  verbs:
  - update
- apiGroups:
  - controller.devfile.io
  resources:
  - devworkspaceroutings/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmap
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - create
  - get
- apiGroups:
  - oauth.openshift.io
  resources:
  - oauthclients
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  - roles
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - '*'
- apiGroups:
  - route.openshift.io
  resources:
  - routes/custom-host
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: devworkspace-che-operator
    app.kubernetes.io/part-of: devworkspace-che-operator
  name: devworkspace-che-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: devworkspace-che-operator
    app.kubernetes.io/part-of: devworkspace-che-operator
  name: devworkspace-che-leader-election-rolebinding
  namespace: devworkspace-che
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: devworkspace-che-leader-election-role
subjects:
- kind: ServiceAccount
  name: devworkspace-che-serviceaccount
  namespace: devworkspace-che
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: devworkspace-che-operator
    app.kubernetes.io/part-of: devworkspace-che-operator
  name: devworkspace-che-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: devworkspace-che-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: devworkspace-che
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: devworkspace-che-operator
    app.kubernetes.io/part-of: devworkspace-che-operator
  name: devworkspace-che-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: devworkspace-che-role
subjects:
- kind: ServiceAccount
  name: devworkspace-che-serviceaccount
  namespace: devworkspace-che
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: devworkspace-che-operator
    app.kubernetes.io/part-of: devworkspace-che-operator
  name: devworkspace-che-configmap
  namespace: devworkspace-che
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: devworkspace-che-operator
    app.kubernetes.io/part-of: devworkspace-che-operator
    control-plane: controller-manager
  name: devworkspace-che-controller-manager-metrics-service
  namespace: devworkspace-che
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/name: devworkspace-che-operator
    app.kubernetes.io/part-of: devworkspace-che-operator
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: devworkspace-che-operator
    app.kubernetes.io/part-of: devworkspace-che-operator
  name: devworkspace-che-manager
  namespace: devworkspace-che
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: devworkspace-che-operator
      app.kubernetes.io/part-of: devworkspace-che-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: devworkspace-che-operator
        app.kubernetes.io/part-of: devworkspace-che-operator
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --enable-leader-election
        command:
        - /usr/local/bin/devworkspace-che-operator
        env:
        - name: WATCH_NAMESPACE
          value: ""
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: devworkspace-operator
        - name: CONTROLLER_SERVICE_ACCOUNT_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: RELATED_IMAGE_gateway
          value: docker.io/traefik:v2.2.8
        - name: RELATED_IMAGE_gateway_configurer
          value: quay.io/che-incubator/configbump:0.1.4
        image: quay.io/che-incubator/devworkspace-che-operator:ci
        imagePullPolicy: Always
        name: devworkspace-che-operator
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 32Mi
      serviceAccountName: devworkspace-che-serviceaccount
      terminationGracePeriodSeconds: 10
